{"ast":null,"code":"import axios from 'axios';\nimport { doLoginMock, fetchPrevLoginMock, doRegisterMock, fetchUserPostsMock, fetchRecentPostsMock, fetchPostMock, createPostMock, addToCartMock, removeFromCartMock, buyCartMock, fetchHistoryMock, fetchUserMock, postReviewMock, fetchReviewsMock, fetchCartMock } from \"./mockApi\"; // LOGIN\n\nexport const doLogin = async _ref => {\n  let {\n    url,\n    params\n  } = _ref;\n  const {\n    username,\n    password\n  } = params;\n\n  if (!url) {\n    return doLoginMock({\n      username,\n      password\n    });\n  } else {\n    return axios.post(`${url}/users/login`, {\n      username,\n      password\n    });\n  }\n};\nexport const fetchPrevLogin = async _ref2 => {\n  let {\n    url,\n    params\n  } = _ref2;\n  const {\n    user_id\n  } = params;\n\n  if (!url) {\n    return fetchPrevLoginMock({\n      user_id\n    });\n  } else {\n    return axios.post(`${url}/users/prev-login`, {\n      user_id\n    });\n  }\n}; // REGISTER\n\nexport const doRegister = async _ref3 => {\n  let {\n    url,\n    params\n  } = _ref3;\n  const {\n    name: display_name,\n    username,\n    password\n  } = params;\n\n  if (!url) {\n    return doRegisterMock({\n      display_name,\n      username,\n      password\n    });\n  } else {\n    return axios.post(`${url}/users/register`, {\n      display_name,\n      username,\n      password\n    });\n  }\n}; // USER\n\nexport const fetchUser = async _ref4 => {\n  let {\n    url,\n    params\n  } = _ref4;\n  const {\n    user_id\n  } = params;\n\n  if (!url) {\n    return fetchUserMock({\n      user_id\n    });\n  } else {\n    return axios.get(`${url}/users/`, {\n      params: {\n        user_id\n      }\n    });\n  }\n}; // POSTS\n\nexport const fetchUserPosts = async _ref5 => {\n  let {\n    url,\n    params\n  } = _ref5;\n  const {\n    user_id\n  } = params;\n\n  if (!url) {\n    return fetchUserPostsMock({\n      user_id\n    });\n  } else {\n    return axios.get(`${url}/posts/`, {\n      params: {\n        user_id\n      }\n    });\n  }\n};\nexport const fetchRecentPosts = async _ref6 => {\n  let {\n    url\n  } = _ref6;\n\n  if (!url) {\n    return fetchRecentPostsMock();\n  } else {\n    return axios.get(`${url}/posts/recent`);\n  }\n};\nexport const fetchPost = async _ref7 => {\n  let {\n    url,\n    params\n  } = _ref7;\n  const {\n    post_id\n  } = params;\n\n  if (!url) {\n    return fetchPostMock({\n      post_id\n    });\n  } else {\n    return axios.get(`${url}/posts/`, {\n      params: {\n        post_id\n      }\n    });\n  }\n};\nexport const createPost = async _ref8 => {\n  let {\n    url,\n    params\n  } = _ref8;\n  const {\n    owner_id,\n    image_url: img_url,\n    name: display_name,\n    description,\n    price\n  } = params;\n\n  if (!url) {\n    return createPostMock({\n      owner_id,\n      img_url,\n      display_name,\n      description,\n      price\n    });\n  } else {\n    return axios.post(`${url}/posts/`, {\n      owner_id,\n      img_url,\n      display_name,\n      description,\n      price\n    });\n  }\n}; // CART\n\nexport const fetchCart = async _ref9 => {\n  let {\n    url,\n    params\n  } = _ref9;\n  const {\n    user_id\n  } = params;\n\n  if (!url) {\n    return fetchCartMock({\n      user_id\n    });\n  } else {\n    return axios.get(`${url}/cart/`, {\n      params: {\n        user_id\n      }\n    });\n  }\n};\nexport const addToCart = async _ref10 => {\n  let {\n    url,\n    params\n  } = _ref10;\n  const {\n    product_id,\n    user_id\n  } = params;\n\n  if (!url) {\n    return addToCartMock({\n      product_id,\n      user_id\n    });\n  } else {\n    return axios.post(`${url}/cart/`, {\n      product_id,\n      user_id\n    });\n  }\n};\nexport const removeFromCart = async _ref11 => {\n  let {\n    url,\n    params\n  } = _ref11;\n  const {\n    item_id\n  } = params;\n\n  if (!url) {\n    return removeFromCartMock({\n      item_id\n    });\n  } else {\n    return axios.delete(`${url}/cart/`, {\n      params: {\n        item_id\n      }\n    });\n  }\n};\nexport const buyCart = async _ref12 => {\n  let {\n    url,\n    params\n  } = _ref12;\n  const {\n    user_id\n  } = params;\n\n  if (!url) {\n    return buyCartMock({\n      user_id\n    });\n  } else {\n    return axios.post(`${url}/cart/buy`, {\n      user_id\n    });\n  }\n}; // HISTORY\n\nexport const fetchHistory = async _ref13 => {\n  let {\n    url,\n    params\n  } = _ref13;\n  const {\n    user_id\n  } = params;\n\n  if (!url) {\n    return fetchHistoryMock({\n      user_id\n    });\n  } else {\n    return axios.get(`${url}/history/${user_id}`);\n  }\n}; // REVIEWS\n\nexport const postReview = async _ref14 => {\n  let {\n    url,\n    params\n  } = _ref14;\n  const {\n    user_id,\n    product_id,\n    rating,\n    description\n  } = params;\n\n  if (!url) {\n    return postReviewMock({\n      user_id,\n      product_id,\n      rating,\n      description\n    });\n  } else {\n    return axios.post(`${url}/reviews/`, {\n      user_id,\n      product_id,\n      rating,\n      description\n    });\n  }\n};\nexport const fetchReviews = async _ref15 => {\n  let {\n    url,\n    params\n  } = _ref15;\n  const {\n    product_id,\n    user_id\n  } = params;\n\n  if (!url) {\n    return fetchReviewsMock({\n      product_id,\n      user_id\n    });\n  } else {\n    return axios.delete(`${url}/reviews/`, {\n      params: {\n        product_id,\n        user_id\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/S/Documents/Proyecto-Backend-1/frontend/src/services/api.js"],"names":["axios","doLoginMock","fetchPrevLoginMock","doRegisterMock","fetchUserPostsMock","fetchRecentPostsMock","fetchPostMock","createPostMock","addToCartMock","removeFromCartMock","buyCartMock","fetchHistoryMock","fetchUserMock","postReviewMock","fetchReviewsMock","fetchCartMock","doLogin","url","params","username","password","post","fetchPrevLogin","user_id","doRegister","name","display_name","fetchUser","get","fetchUserPosts","fetchRecentPosts","fetchPost","post_id","createPost","owner_id","image_url","img_url","description","price","fetchCart","addToCart","product_id","removeFromCart","item_id","delete","buyCart","fetchHistory","postReview","rating","fetchReviews"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    doLoginMock,\r\n    fetchPrevLoginMock,\r\n    doRegisterMock,\r\n    fetchUserPostsMock,\r\n    fetchRecentPostsMock,\r\n    fetchPostMock,\r\n    createPostMock,\r\n    addToCartMock,\r\n    removeFromCartMock,\r\n    buyCartMock,\r\n    fetchHistoryMock,\r\n    fetchUserMock,\r\n    postReviewMock, fetchReviewsMock, fetchCartMock\r\n} from \"./mockApi\";\r\n\r\n// LOGIN\r\nexport const doLogin = async ({url, params}) => {\r\n    const {username, password} = params\r\n    if (!url) {\r\n        return doLoginMock({username, password})\r\n    } else {\r\n        return axios.post(\r\n            `${url}/users/login`,\r\n            {username, password}\r\n        )\r\n    }\r\n}\r\n\r\nexport const fetchPrevLogin = async ({url, params}) => {\r\n    const {user_id} = params\r\n    if (!url) {\r\n        return fetchPrevLoginMock({user_id})\r\n    } else {\r\n        return axios.post(\r\n            `${url}/users/prev-login`,\r\n            {user_id}\r\n        )\r\n    }\r\n}\r\n\r\n// REGISTER\r\nexport const doRegister = async ({url, params}) => {\r\n    const {name: display_name, username, password} = params\r\n    if (!url) {\r\n        return doRegisterMock({display_name, username, password})\r\n    } else {\r\n        return axios.post(\r\n            `${url}/users/register`,\r\n            {display_name, username, password}\r\n        )\r\n    }\r\n}\r\n\r\n// USER\r\nexport const fetchUser = async ({url, params}) => {\r\n    const {user_id} = params\r\n    if (!url) {\r\n        return fetchUserMock({user_id})\r\n    } else {\r\n        return axios.get(\r\n            `${url}/users/`,\r\n            {\r\n                params: {user_id}\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n// POSTS\r\nexport const fetchUserPosts = async ({url, params}) => {\r\n    const {user_id} = params;\r\n    if (!url) {\r\n        return fetchUserPostsMock({user_id})\r\n    } else {\r\n        return axios.get(\r\n            `${url}/posts/`,\r\n            {params: {user_id}}\r\n        )\r\n    }\r\n}\r\n\r\nexport const fetchRecentPosts = async ({url}) => {\r\n    if (!url) {\r\n        return fetchRecentPostsMock()\r\n    } else {\r\n        return axios.get(\r\n            `${url}/posts/recent`\r\n        )\r\n    }\r\n}\r\n\r\nexport const fetchPost = async ({url, params}) => {\r\n    const {post_id} = params\r\n    if (!url) {\r\n        return fetchPostMock({post_id})\r\n    } else {\r\n        return axios.get(\r\n            `${url}/posts/`,\r\n            {params: {post_id}}\r\n        )\r\n    }\r\n}\r\n\r\nexport const createPost = async ({url, params}) => {\r\n    const {owner_id, image_url: img_url, name: display_name, description, price} = params\r\n    if (!url) {\r\n        return createPostMock({owner_id, img_url, display_name, description, price})\r\n    } else {\r\n        return axios.post(\r\n            `${url}/posts/`,\r\n            {owner_id, img_url, display_name, description, price}\r\n        )\r\n    }\r\n}\r\n\r\n// CART\r\nexport const fetchCart = async ({url, params}) => {\r\n    const {user_id} = params\r\n    if (!url) {\r\n        return fetchCartMock({user_id})\r\n    } else {\r\n        return axios.get(\r\n            `${url}/cart/`,\r\n            { params: {user_id}}\r\n        )\r\n    }\r\n}\r\n\r\nexport const addToCart = async ({url, params}) => {\r\n    const {product_id, user_id} = params\r\n    if (!url) {\r\n        return addToCartMock({product_id, user_id})\r\n    } else {\r\n        return axios.post(\r\n            `${url}/cart/`,\r\n            {product_id, user_id}\r\n        )\r\n    }\r\n}\r\n\r\nexport const removeFromCart = async ({url, params}) => {\r\n    const {item_id} = params\r\n    if (!url) {\r\n        return removeFromCartMock({item_id})\r\n    } else {\r\n        return axios.delete(\r\n            `${url}/cart/`,\r\n            {params: {item_id}}\r\n        )\r\n    }\r\n}\r\n\r\nexport const buyCart = async ({url, params}) => {\r\n    const {user_id} = params\r\n    if (!url) {\r\n        return buyCartMock({user_id})\r\n    } else {\r\n        return axios.post(\r\n            `${url}/cart/buy`,\r\n            {user_id}\r\n        )\r\n    }\r\n}\r\n\r\n// HISTORY\r\nexport const fetchHistory = async ({url, params}) => {\r\n    const {user_id} = params\r\n    if (!url) {\r\n        return fetchHistoryMock({user_id})\r\n    } else {\r\n        return axios.get(\r\n            `${url}/history/${user_id}`,\r\n        )\r\n    }\r\n}\r\n\r\n// REVIEWS\r\nexport const postReview = async ({url, params}) => {\r\n    const {user_id, product_id, rating, description} = params\r\n    if (!url) {\r\n        return postReviewMock({user_id, product_id, rating, description})\r\n    } else {\r\n        return axios.post(\r\n            `${url}/reviews/`,\r\n            {user_id, product_id, rating, description}\r\n        )\r\n    }\r\n}\r\n\r\nexport const fetchReviews = async ({url, params}) => {\r\n    const {product_id, user_id} = params\r\n    if (!url) {\r\n        return fetchReviewsMock({product_id, user_id})\r\n    } else {\r\n        return axios.delete(\r\n            `${url}/reviews/`,\r\n            {params: {product_id, user_id}}\r\n        )\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}