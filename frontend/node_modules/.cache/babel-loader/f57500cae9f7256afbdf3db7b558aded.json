{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { fetchPrevLogin } from \"./api\";\nconst initialState = {\n  data: undefined,\n  loading: false\n};\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    dataReceived: (state, action) => {\n      state.data = action.payload;\n      state.loading = false;\n    },\n    dataLoading: state => {\n      if (!state.loading) {\n        state.loading = true;\n      }\n    }\n  }\n});\nexport const {\n  dataReceived,\n  dataLoading\n} = userSlice.actions;\nexport const fetchUser = async dispatch => {\n  dispatch(dataLoading());\n  const user_id = localStorage.getItem('user_id');\n  const url = localStorage.getItem('backend_url');\n  const data = await fetchPrevLogin({\n    url,\n    params: {\n      user_id\n    }\n  }).catch(() => undefined);\n\n  if (data) {\n    dispatch(dataReceived(data));\n  }\n};\nexport const setUser = async (dispatch, data) => {\n  localStorage.setItem('user_id', data._id);\n  dispatch(dataReceived(data));\n};\nexport const getUser = state => state.user.data;\nexport const isUserLoading = state => state.user.loading;\nexport default userSlice.reducer;","map":{"version":3,"sources":["C:/Users/S/Documents/Proyecto-Backend-1/frontend/src/services/userSlice.js"],"names":["createSlice","fetchPrevLogin","initialState","data","undefined","loading","userSlice","name","reducers","dataReceived","state","action","payload","dataLoading","actions","fetchUser","dispatch","user_id","localStorage","getItem","url","params","catch","setUser","setItem","_id","getUser","user","isUserLoading","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AACA,SAAQC,cAAR,QAA6B,OAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAEC,SADW;AAEjBC,EAAAA,OAAO,EAAE;AAFQ,CAArB;AAKA,OAAO,MAAMC,SAAS,GAAGN,WAAW,CAAC;AACjCO,EAAAA,IAAI,EAAE,MAD2B;AAEjCL,EAAAA,YAFiC;AAGjCM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,YAAY,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7BD,MAAAA,KAAK,CAACP,IAAN,GAAaQ,MAAM,CAACC,OAApB;AACAF,MAAAA,KAAK,CAACL,OAAN,GAAgB,KAAhB;AACH,KAJK;AAKNQ,IAAAA,WAAW,EAAGH,KAAD,IAAW;AACpB,UAAI,CAACA,KAAK,CAACL,OAAX,EAAoB;AAChBK,QAAAA,KAAK,CAACL,OAAN,GAAgB,IAAhB;AACH;AACJ;AATK;AAHuB,CAAD,CAA7B;AAgBP,OAAO,MAAM;AAACI,EAAAA,YAAD;AAAeI,EAAAA;AAAf,IAA8BP,SAAS,CAACQ,OAA9C;AAEP,OAAO,MAAMC,SAAS,GAAG,MAAOC,QAAP,IAAoB;AACzCA,EAAAA,QAAQ,CAACH,WAAW,EAAZ,CAAR;AACA,QAAMI,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAhB;AACA,QAAMC,GAAG,GAAGF,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAZ;AACA,QAAMhB,IAAI,GAAG,MAAMF,cAAc,CAAC;AAACmB,IAAAA,GAAD;AAAMC,IAAAA,MAAM,EAAE;AAACJ,MAAAA;AAAD;AAAd,GAAD,CAAd,CAAyCK,KAAzC,CAA+C,MAAMlB,SAArD,CAAnB;;AACA,MAAID,IAAJ,EAAU;AACNa,IAAAA,QAAQ,CAACP,YAAY,CAACN,IAAD,CAAb,CAAR;AACH;AACJ,CARM;AAUP,OAAO,MAAMoB,OAAO,GAAG,OAAOP,QAAP,EAAiBb,IAAjB,KAA0B;AAC7Ce,EAAAA,YAAY,CAACM,OAAb,CAAqB,SAArB,EAAgCrB,IAAI,CAACsB,GAArC;AACAT,EAAAA,QAAQ,CAACP,YAAY,CAACN,IAAD,CAAb,CAAR;AACH,CAHM;AAKP,OAAO,MAAMuB,OAAO,GAAIhB,KAAD,IAAWA,KAAK,CAACiB,IAAN,CAAWxB,IAAtC;AACP,OAAO,MAAMyB,aAAa,GAAIlB,KAAD,IAAWA,KAAK,CAACiB,IAAN,CAAWtB,OAA5C;AAEP,eAAeC,SAAS,CAACuB,OAAzB","sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\r\nimport {fetchPrevLogin} from \"./api\";\r\n\r\nconst initialState = {\r\n    data: undefined,\r\n    loading: false,\r\n}\r\n\r\nexport const userSlice = createSlice({\r\n    name: 'user',\r\n    initialState,\r\n    reducers: {\r\n        dataReceived: (state, action) => {\r\n            state.data = action.payload\r\n            state.loading = false\r\n        },\r\n        dataLoading: (state) => {\r\n            if (!state.loading) {\r\n                state.loading = true\r\n            }\r\n        },\r\n    },\r\n})\r\n\r\nexport const {dataReceived, dataLoading} = userSlice.actions\r\n\r\nexport const fetchUser = async (dispatch) => {\r\n    dispatch(dataLoading())\r\n    const user_id = localStorage.getItem('user_id');\r\n    const url = localStorage.getItem('backend_url');\r\n    const data = await fetchPrevLogin({url, params: {user_id}}).catch(() => undefined)\r\n    if (data) {\r\n        dispatch(dataReceived(data))\r\n    }\r\n}\r\n\r\nexport const setUser = async (dispatch, data) => {\r\n    localStorage.setItem('user_id', data._id);\r\n    dispatch(dataReceived(data))\r\n}\r\n\r\nexport const getUser = (state) => state.user.data\r\nexport const isUserLoading = (state) => state.user.loading\r\n\r\nexport default userSlice.reducer\r\n"]},"metadata":{},"sourceType":"module"}