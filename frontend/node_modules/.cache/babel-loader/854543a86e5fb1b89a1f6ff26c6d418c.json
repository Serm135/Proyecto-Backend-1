{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S\\\\Documents\\\\Proyecto-Backend-1\\\\frontend\\\\src\\\\components\\\\new-review\\\\Component.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport \"./style.scss\";\nimport { postReview } from \"../../services/api\";\nimport { useSelector } from \"react-redux\";\nimport { getUrl } from \"../../services/apiSlice\";\nimport { getUser, setUser } from \"../../services/userSlice\";\nimport { SmartForm } from \"../form\";\nimport { genNameFromPlaceHolder } from \"../../utils/tools\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Component = _ref => {\n  _s();\n\n  let {\n    product_id,\n    refreshReviews\n  } = _ref;\n  const API_URL = useSelector(getUrl);\n  const currentUser = useSelector(getUser);\n\n  if (!currentUser) {\n    return false;\n  }\n\n  const onSubmit = async _ref2 => {\n    let {\n      rating,\n      description\n    } = _ref2;\n    return postReview({\n      url: API_URL,\n      params: {\n        user_id: currentUser._id,\n        product_id,\n        rating,\n        description\n      }\n    });\n  };\n\n  const onSuccess = () => {\n    refreshReviews();\n  };\n\n  const formStructure = [{\n    type: 'text',\n    placeholder: 'Description'\n  }, {\n    type: 'number',\n    placeholder: 'Rating'\n  }];\n  const formButtons = [{\n    type: \"rounded-primary\",\n    text: \"Post review\",\n    isSubmit: true\n  }];\n  const formInitData = formStructure.reduce((acc, curr) => ({ ...acc,\n    [genNameFromPlaceHolder(curr)]: \"\"\n  }), {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'new-review',\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Leave a review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SmartForm, {\n      formInitData: formInitData,\n      formStructure: formStructure,\n      formButtons: formButtons,\n      onSubmit: onSubmit,\n      onSuccess: onSuccess,\n      workingText: \"Posting review...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Component, \"FjSCs0fpTh2i0fI4yVzr0fD+Lqc=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Component;\nexport default Component;\n\nvar _c;\n\n$RefreshReg$(_c, \"Component\");","map":{"version":3,"sources":["C:/Users/S/Documents/Proyecto-Backend-1/frontend/src/components/new-review/Component.js"],"names":["React","postReview","useSelector","getUrl","getUser","setUser","SmartForm","genNameFromPlaceHolder","Component","product_id","refreshReviews","API_URL","currentUser","onSubmit","rating","description","url","params","user_id","_id","onSuccess","formStructure","type","placeholder","formButtons","text","isSubmit","formInitData","reduce","acc","curr"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,MAAR,QAAqB,yBAArB;AACA,SAAQC,OAAR,EAAiBC,OAAjB,QAA+B,0BAA/B;AACA,SAAQC,SAAR,QAAwB,SAAxB;AACA,SAAQC,sBAAR,QAAqC,mBAArC;;;AAEA,MAAMC,SAAS,GAAG,QAAkC;AAAA;;AAAA,MAAjC;AAACC,IAAAA,UAAD;AAAaC,IAAAA;AAAb,GAAiC;AAChD,QAAMC,OAAO,GAAGT,WAAW,CAACC,MAAD,CAA3B;AACA,QAAMS,WAAW,GAAGV,WAAW,CAACE,OAAD,CAA/B;;AAEA,MAAI,CAACQ,WAAL,EAAkB;AACd,WAAO,KAAP;AACH;;AAED,QAAMC,QAAQ,GAAG;AAAA,QAAO;AAACC,MAAAA,MAAD;AAASC,MAAAA;AAAT,KAAP;AAAA,WAAiCd,UAAU,CAAC;AAACe,MAAAA,GAAG,EAAEL,OAAN;AAAeM,MAAAA,MAAM,EAAE;AAACC,QAAAA,OAAO,EAAEN,WAAW,CAACO,GAAtB;AAA2BV,QAAAA,UAA3B;AAAuCK,QAAAA,MAAvC;AAA+CC,QAAAA;AAA/C;AAAvB,KAAD,CAA3C;AAAA,GAAjB;;AACA,QAAMK,SAAS,GAAG,MAAM;AACpBV,IAAAA,cAAc;AACjB,GAFD;;AAIA,QAAMW,aAAa,GAAG,CAClB;AACIC,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,WAAW,EAAE;AAFjB,GADkB,EAKlB;AACID,IAAAA,IAAI,EAAE,QADV;AAEIC,IAAAA,WAAW,EAAE;AAFjB,GALkB,CAAtB;AAUA,QAAMC,WAAW,GAAG,CAChB;AACIF,IAAAA,IAAI,EAAE,iBADV;AAEIG,IAAAA,IAAI,EAAE,aAFV;AAGIC,IAAAA,QAAQ,EAAE;AAHd,GADgB,CAApB;AAOA,QAAMC,YAAY,GAAGN,aAAa,CAACO,MAAd,CAAqB,CAACC,GAAD,EAAMC,IAAN,MAAgB,EAAC,GAAGD,GAAJ;AAAS,KAACtB,sBAAsB,CAACuB,IAAD,CAAvB,GAAgC;AAAzC,GAAhB,CAArB,EAAoF,EAApF,CAArB;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAE,YAAhB;AAAA,4BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAIH,QAAC,SAAD;AACI,MAAA,YAAY,EAAEH,YADlB;AAEI,MAAA,aAAa,EAAEN,aAFnB;AAGI,MAAA,WAAW,EAAEG,WAHjB;AAII,MAAA,QAAQ,EAAEX,QAJd;AAKI,MAAA,SAAS,EAAEO,SALf;AAMI,MAAA,WAAW,EAAE;AANjB;AAAA;AAAA;AAAA;AAAA,YAJG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAaH,CA7CD;;GAAMZ,S;UACcN,W,EACIA,W;;;KAFlBM,S;AA+CN,eAAeA,SAAf","sourcesContent":["import React from 'react'\r\nimport \"./style.scss\"\r\nimport {postReview} from \"../../services/api\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getUrl} from \"../../services/apiSlice\";\r\nimport {getUser, setUser} from \"../../services/userSlice\";\r\nimport {SmartForm} from \"../form\";\r\nimport {genNameFromPlaceHolder} from \"../../utils/tools\";\r\n\r\nconst Component = ({product_id, refreshReviews}) => {\r\n    const API_URL = useSelector(getUrl)\r\n    const currentUser = useSelector(getUser)\r\n\r\n    if (!currentUser) {\r\n        return false\r\n    }\r\n\r\n    const onSubmit = async ({rating, description}) => postReview({url: API_URL, params: {user_id: currentUser._id, product_id, rating, description}})\r\n    const onSuccess = () => {\r\n        refreshReviews()\r\n    }\r\n\r\n    const formStructure = [\r\n        {\r\n            type: 'text',\r\n            placeholder: 'Description'\r\n        },\r\n        {\r\n            type: 'number',\r\n            placeholder: 'Rating'\r\n        }\r\n    ]\r\n    const formButtons = [\r\n        {\r\n            type: \"rounded-primary\",\r\n            text: \"Post review\",\r\n            isSubmit: true\r\n        },\r\n    ]\r\n    const formInitData = formStructure.reduce((acc, curr) => ({...acc, [genNameFromPlaceHolder(curr)]: \"\"}), {})\r\n\r\n    return <div className={'new-review'} >\r\n        <h2>\r\n            Leave a review\r\n        </h2>\r\n        <SmartForm\r\n            formInitData={formInitData}\r\n            formStructure={formStructure}\r\n            formButtons={formButtons}\r\n            onSubmit={onSubmit}\r\n            onSuccess={onSuccess}\r\n            workingText={\"Posting review...\"}\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default Component\r\n"]},"metadata":{},"sourceType":"module"}