{"ast":null,"code":"import axios from 'axios';\nimport { doLoginMock, fetchPrevLoginMock, doRegisterMock, fetchUserPostsMock, fetchRecentPostsMock, fetchPostMock, createPostMock, addToCartMock, removeFromCartMock, buyCartMock, fetchHistoryMock, fetchUserMock, postReviewMock, fetchReviewsMock, fetchCartMock } from \"./mockApi\"; // LOGIN\n\nexport const doLogin = async _ref => {\n  let {\n    url,\n    params\n  } = _ref;\n  const {\n    username,\n    password\n  } = params;\n\n  if (!url) {\n    return doLoginMock({\n      username,\n      password\n    });\n  } else {\n    const res = await axios.post(`${url}/users/login`, {\n      username,\n      password\n    });\n    return res.data;\n  }\n};\nexport const fetchPrevLogin = async _ref2 => {\n  let {\n    url,\n    params\n  } = _ref2;\n  const {\n    user_id\n  } = params;\n\n  if (!url) {\n    return fetchPrevLoginMock({\n      user_id\n    });\n  } else {\n    const res = await axios.post(`${url}/users/prev-login`, {\n      user_id\n    });\n    return res.data;\n  }\n}; // REGISTER\n\nexport const doRegister = async _ref3 => {\n  let {\n    url,\n    params\n  } = _ref3;\n  const {\n    name: display_name,\n    username,\n    password\n  } = params;\n\n  if (!url) {\n    return doRegisterMock({\n      display_name,\n      username,\n      password\n    });\n  } else {\n    const res = await axios.post(`${url}/users/register`, {\n      display_name,\n      username,\n      password\n    });\n    return res.data;\n  }\n}; // USER\n\nexport const fetchUser = async _ref4 => {\n  let {\n    url,\n    params\n  } = _ref4;\n  const {\n    user_id\n  } = params;\n\n  if (!url) {\n    return fetchUserMock({\n      user_id\n    });\n  } else {\n    const res = await axios.get(`${url}/users/`, {\n      params: {\n        user_id\n      }\n    });\n    return res.data;\n  }\n}; // POSTS\n\nexport const fetchUserPosts = async _ref5 => {\n  let {\n    url,\n    params\n  } = _ref5;\n  const {\n    user_id\n  } = params;\n\n  if (!url) {\n    return fetchUserPostsMock({\n      user_id\n    });\n  } else {\n    const res = await axios.get(`${url}/posts/`, {\n      params: {\n        user_id\n      }\n    });\n    return res.data;\n  }\n};\nexport const fetchRecentPosts = async _ref6 => {\n  let {\n    url\n  } = _ref6;\n\n  if (!url) {\n    return fetchRecentPostsMock();\n  } else {\n    const res = await axios.get(`${url}/posts/recent`);\n    return res.data;\n  }\n};\nexport const fetchPost = async _ref7 => {\n  let {\n    url,\n    params\n  } = _ref7;\n  const {\n    post_id\n  } = params;\n\n  if (!url) {\n    return fetchPostMock({\n      post_id\n    });\n  } else {\n    const res = await axios.get(`${url}/posts/`, {\n      params: {\n        post_id\n      }\n    });\n    return res.data;\n  }\n};\nexport const createPost = async _ref8 => {\n  let {\n    url,\n    params\n  } = _ref8;\n  const {\n    owner_id,\n    image_url: img_url,\n    name: display_name,\n    description,\n    price\n  } = params;\n\n  if (!url) {\n    return createPostMock({\n      owner_id,\n      img_url,\n      display_name,\n      description,\n      price\n    });\n  } else {\n    const res = await axios.post(`${url}/posts/`, {\n      owner_id,\n      img_url,\n      display_name,\n      description,\n      price\n    });\n    return res.data;\n  }\n}; // CART\n\nexport const fetchCart = async _ref9 => {\n  let {\n    url,\n    params\n  } = _ref9;\n  const {\n    user_id\n  } = params;\n\n  if (!url) {\n    return fetchCartMock({\n      user_id\n    });\n  } else {\n    const res = await axios.get(`${url}/cart/`, {\n      params: {\n        user_id\n      }\n    });\n    return res.data;\n  }\n};\nexport const addToCart = async _ref10 => {\n  let {\n    url,\n    params\n  } = _ref10;\n  const {\n    product_id,\n    user_id\n  } = params;\n\n  if (!url) {\n    return addToCartMock({\n      product_id,\n      user_id\n    });\n  } else {\n    const res = await axios.post(`${url}/cart/`, {\n      product_id,\n      user_id\n    });\n    return res.data;\n  }\n};\nexport const removeFromCart = async _ref11 => {\n  let {\n    url,\n    params\n  } = _ref11;\n  const {\n    item_id\n  } = params;\n\n  if (!url) {\n    return removeFromCartMock({\n      item_id\n    });\n  } else {\n    return axios.delete(`${url}/cart/`, {\n      params: {\n        item_id\n      }\n    });\n  }\n};\nexport const buyCart = async _ref12 => {\n  let {\n    url,\n    params\n  } = _ref12;\n  const {\n    user_id\n  } = params;\n\n  if (!url) {\n    return buyCartMock({\n      user_id\n    });\n  } else {\n    const res = await axios.post(`${url}/cart/buy`, {\n      user_id\n    });\n    return res.data;\n  }\n}; // HISTORY\n\nexport const fetchHistory = async _ref13 => {\n  let {\n    url,\n    params\n  } = _ref13;\n  const {\n    user_id\n  } = params;\n\n  if (!url) {\n    return fetchHistoryMock({\n      user_id\n    });\n  } else {\n    const res = await axios.get(`${url}/history/${user_id}`);\n    return res.data;\n  }\n}; // REVIEWS\n\nexport const postReview = async _ref14 => {\n  let {\n    url,\n    params\n  } = _ref14;\n  const {\n    user_id,\n    product_id,\n    rating,\n    description\n  } = params;\n\n  if (!url) {\n    return postReviewMock({\n      user_id,\n      product_id,\n      rating,\n      description\n    });\n  } else {\n    const res = await axios.post(`${url}/reviews/`, {\n      user_id,\n      product_id,\n      rating,\n      description\n    });\n    return res.data;\n  }\n};\nexport const fetchReviews = async _ref15 => {\n  let {\n    url,\n    params\n  } = _ref15;\n  const {\n    product_id,\n    user_id\n  } = params;\n\n  if (!url) {\n    return fetchReviewsMock({\n      product_id,\n      user_id\n    });\n  } else {\n    const res = await axios.get(`${url}/reviews/`, {\n      params: {\n        product_id,\n        user_id\n      }\n    });\n    return res.data;\n  }\n};","map":{"version":3,"sources":["C:/Users/S/Documents/Proyecto-Backend-1/frontend/src/services/api.js"],"names":["axios","doLoginMock","fetchPrevLoginMock","doRegisterMock","fetchUserPostsMock","fetchRecentPostsMock","fetchPostMock","createPostMock","addToCartMock","removeFromCartMock","buyCartMock","fetchHistoryMock","fetchUserMock","postReviewMock","fetchReviewsMock","fetchCartMock","doLogin","url","params","username","password","res","post","data","fetchPrevLogin","user_id","doRegister","name","display_name","fetchUser","get","fetchUserPosts","fetchRecentPosts","fetchPost","post_id","createPost","owner_id","image_url","img_url","description","price","fetchCart","addToCart","product_id","removeFromCart","item_id","delete","buyCart","fetchHistory","postReview","rating","fetchReviews"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n    doLoginMock,\n    fetchPrevLoginMock,\n    doRegisterMock,\n    fetchUserPostsMock,\n    fetchRecentPostsMock,\n    fetchPostMock,\n    createPostMock,\n    addToCartMock,\n    removeFromCartMock,\n    buyCartMock,\n    fetchHistoryMock,\n    fetchUserMock,\n    postReviewMock, fetchReviewsMock, fetchCartMock\n} from \"./mockApi\";\n\n// LOGIN\nexport const doLogin = async ({url, params}) => {\n    const {username, password} = params\n    if (!url) {\n        return doLoginMock({username, password})\n    } else {\n        const res = await axios.post(\n            `${url}/users/login`,\n            {username, password}\n        )\n        return res.data\n    }\n}\n\nexport const fetchPrevLogin = async ({url, params}) => {\n    const {user_id} = params\n    if (!url) {\n        return fetchPrevLoginMock({user_id})\n    } else {\n        const res = await axios.post(\n            `${url}/users/prev-login`,\n            {user_id}\n        )\n        return res.data\n    }\n}\n\n// REGISTER\nexport const doRegister = async ({url, params}) => {\n    const {name: display_name, username, password} = params\n    if (!url) {\n        return doRegisterMock({display_name, username, password})\n    } else {\n        const res = await axios.post(\n            `${url}/users/register`,\n            {display_name, username, password}\n        )\n        return res.data\n    }\n}\n\n// USER\nexport const fetchUser = async ({url, params}) => {\n    const {user_id} = params\n    if (!url) {\n        return fetchUserMock({user_id})\n    } else {\n        const res = await axios.get(\n            `${url}/users/`,\n            {\n                params: {user_id}\n            }\n        )\n        return res.data\n    }\n}\n\n// POSTS\nexport const fetchUserPosts = async ({url, params}) => {\n    const {user_id} = params;\n    if (!url) {\n        return fetchUserPostsMock({user_id})\n    } else {\n        const res = await axios.get(\n            `${url}/posts/`,\n            {params: {user_id}}\n        )\n        return res.data\n    }\n}\n\nexport const fetchRecentPosts = async ({url}) => {\n    if (!url) {\n        return fetchRecentPostsMock()\n    } else {\n        const res = await axios.get(\n            `${url}/posts/recent`\n        )\n        return res.data\n    }\n}\n\nexport const fetchPost = async ({url, params}) => {\n    const {post_id} = params\n    if (!url) {\n        return fetchPostMock({post_id})\n    } else {\n        const res = await axios.get(\n            `${url}/posts/`,\n            {params: {post_id}}\n        )\n        return res.data\n    }\n}\n\nexport const createPost = async ({url, params}) => {\n    const {owner_id, image_url: img_url, name: display_name, description, price} = params\n    if (!url) {\n        return createPostMock({owner_id, img_url, display_name, description, price})\n    } else {\n        const res = await axios.post(\n            `${url}/posts/`,\n            {owner_id, img_url, display_name, description, price}\n        )\n        return res.data\n    }\n}\n\n// CART\nexport const fetchCart = async ({url, params}) => {\n    const {user_id} = params\n    if (!url) {\n        return fetchCartMock({user_id})\n    } else {\n        const res = await axios.get(\n            `${url}/cart/`,\n            { params: {user_id}}\n        )\n        return res.data\n    }\n}\n\nexport const addToCart = async ({url, params}) => {\n    const {product_id, user_id} = params\n    if (!url) {\n        return addToCartMock({product_id, user_id})\n    } else {\n        const res = await axios.post(\n            `${url}/cart/`,\n            {product_id, user_id}\n        )\n        return res.data\n    }\n}\n\nexport const removeFromCart = async ({url, params}) => {\n    const {item_id} = params\n    if (!url) {\n        return removeFromCartMock({item_id})\n    } else {\n        return axios.delete(\n            `${url}/cart/`,\n            {params: {item_id}}\n        )\n    }\n}\n\nexport const buyCart = async ({url, params}) => {\n    const {user_id} = params\n    if (!url) {\n        return buyCartMock({user_id})\n    } else {\n        const res = await axios.post(\n            `${url}/cart/buy`,\n            {user_id}\n        )\n        return res.data\n    }\n}\n\n// HISTORY\nexport const fetchHistory = async ({url, params}) => {\n    const {user_id} = params\n    if (!url) {\n        return fetchHistoryMock({user_id})\n    } else {\n        const res = await axios.get(\n            `${url}/history/${user_id}`,\n        )\n        return res.data\n    }\n}\n\n// REVIEWS\nexport const postReview = async ({url, params}) => {\n    const {user_id, product_id, rating, description} = params\n    if (!url) {\n        return postReviewMock({user_id, product_id, rating, description})\n    } else {\n        const res = await axios.post(\n            `${url}/reviews/`,\n            {user_id, product_id, rating, description}\n        )\n        return res.data\n    }\n}\n\nexport const fetchReviews = async ({url, params}) => {\n    const {product_id, user_id} = params\n    if (!url) {\n        return fetchReviewsMock({product_id, user_id})\n    } else {\n        const res = await axios.get(\n            `${url}/reviews/`,\n            {params: {product_id, user_id}}\n        )\n        return res.data\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}