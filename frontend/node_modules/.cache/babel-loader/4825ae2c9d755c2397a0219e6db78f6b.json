{"ast":null,"code":"// LOGIN\nexport const doLoginMock = async _ref => {\n  let {\n    username,\n    password\n  } = _ref;\n  return Promise.resolve();\n};\nexport const fetchPrevLoginMock = async _ref2 => {\n  let {\n    user_id\n  } = _ref2;\n  return Promise.resolve();\n}; // REGISTER\n\nexport const doRegisterMock = async _ref3 => {\n  let {\n    display_name,\n    username,\n    password\n  } = _ref3;\n  return Promise.resolve();\n}; // USER\n\nexport const fetchUserMock = async _ref4 => {\n  let {\n    user_id\n  } = _ref4;\n  return Promise.resolve();\n}; // POSTS\n\nexport const fetchUserPostsMock = async _ref5 => {\n  let {\n    user_id\n  } = _ref5;\n  return Promise.resolve();\n};\nexport const fetchRecentPostsMock = async () => Promise.resolve();\nexport const fetchPostMock = async _ref6 => {\n  let {\n    post_id\n  } = _ref6;\n  return Promise.resolve();\n};\nexport const createPostMock = async _ref7 => {\n  let {\n    owner_id,\n    display_name,\n    description,\n    price\n  } = _ref7;\n  return Promise.resolve();\n}; // CART\n\nexport const fetchCartMock = async _ref8 => {\n  let {\n    user_id\n  } = _ref8;\n  return Promise.resolve();\n};\nexport const addToCartMock = async _ref9 => {\n  let {\n    product_id,\n    user_id\n  } = _ref9;\n  return Promise.resolve();\n};\nexport const removeFromCartMock = async _ref10 => {\n  let {\n    item_id\n  } = _ref10;\n  return Promise.resolve();\n};\nexport const buyCartMock = async _ref11 => {\n  let {\n    user_id\n  } = _ref11;\n  return Promise.resolve();\n}; // HISTORY\n\nexport const fetchHistoryMock = async _ref12 => {\n  let {\n    user_id\n  } = _ref12;\n  return Promise.resolve();\n}; // REVIEWS\n\nexport const postReviewMock = async _ref13 => {\n  let {\n    user_id,\n    product_id,\n    rating,\n    description\n  } = _ref13;\n  return Promise.resolve();\n};\nexport const fetchReviewsMock = async _ref14 => {\n  let {\n    product_id,\n    user_id\n  } = _ref14;\n  return Promise.resolve();\n};","map":{"version":3,"sources":["C:/Users/S/Documents/Proyecto-Backend-1/frontend/src/services/mockApi.js"],"names":["doLoginMock","username","password","Promise","resolve","fetchPrevLoginMock","user_id","doRegisterMock","display_name","fetchUserMock","fetchUserPostsMock","fetchRecentPostsMock","fetchPostMock","post_id","createPostMock","owner_id","description","price","fetchCartMock","addToCartMock","product_id","removeFromCartMock","item_id","buyCartMock","fetchHistoryMock","postReviewMock","rating","fetchReviewsMock"],"mappings":"AACA;AACA,OAAO,MAAMA,WAAW,GAAG;AAAA,MAAO;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAP;AAAA,SAAgCC,OAAO,CAACC,OAAR,EAAhC;AAAA,CAApB;AAEP,OAAO,MAAMC,kBAAkB,GAAG;AAAA,MAAO;AAACC,IAAAA;AAAD,GAAP;AAAA,SAAqBH,OAAO,CAACC,OAAR,EAArB;AAAA,CAA3B,C,CAEP;;AACA,OAAO,MAAMG,cAAc,GAAG;AAAA,MAAO;AAACC,IAAAA,YAAD;AAAeP,IAAAA,QAAf;AAAyBC,IAAAA;AAAzB,GAAP;AAAA,SAA8CC,OAAO,CAACC,OAAR,EAA9C;AAAA,CAAvB,C,CAEP;;AACA,OAAO,MAAMK,aAAa,GAAG;AAAA,MAAO;AAACH,IAAAA;AAAD,GAAP;AAAA,SAAqBH,OAAO,CAACC,OAAR,EAArB;AAAA,CAAtB,C,CAEP;;AACA,OAAO,MAAMM,kBAAkB,GAAG;AAAA,MAAO;AAACJ,IAAAA;AAAD,GAAP;AAAA,SAAqBH,OAAO,CAACC,OAAR,EAArB;AAAA,CAA3B;AAEP,OAAO,MAAMO,oBAAoB,GAAG,YAAYR,OAAO,CAACC,OAAR,EAAzC;AAEP,OAAO,MAAMQ,aAAa,GAAG;AAAA,MAAO;AAACC,IAAAA;AAAD,GAAP;AAAA,SAAqBV,OAAO,CAACC,OAAR,EAArB;AAAA,CAAtB;AAEP,OAAO,MAAMU,cAAc,GAAG;AAAA,MAAO;AAACC,IAAAA,QAAD;AAAWP,IAAAA,YAAX;AAAyBQ,IAAAA,WAAzB;AAAsCC,IAAAA;AAAtC,GAAP;AAAA,SAAwDd,OAAO,CAACC,OAAR,EAAxD;AAAA,CAAvB,C,CAEP;;AACA,OAAO,MAAMc,aAAa,GAAG;AAAA,MAAO;AAACZ,IAAAA;AAAD,GAAP;AAAA,SAAqBH,OAAO,CAACC,OAAR,EAArB;AAAA,CAAtB;AAEP,OAAO,MAAMe,aAAa,GAAG;AAAA,MAAO;AAACC,IAAAA,UAAD;AAAad,IAAAA;AAAb,GAAP;AAAA,SAAiCH,OAAO,CAACC,OAAR,EAAjC;AAAA,CAAtB;AAEP,OAAO,MAAMiB,kBAAkB,GAAG;AAAA,MAAO;AAACC,IAAAA;AAAD,GAAP;AAAA,SAAqBnB,OAAO,CAACC,OAAR,EAArB;AAAA,CAA3B;AAEP,OAAO,MAAMmB,WAAW,GAAG;AAAA,MAAO;AAACjB,IAAAA;AAAD,GAAP;AAAA,SAAqBH,OAAO,CAACC,OAAR,EAArB;AAAA,CAApB,C,CAEP;;AAEA,OAAO,MAAMoB,gBAAgB,GAAG;AAAA,MAAO;AAAClB,IAAAA;AAAD,GAAP;AAAA,SAAqBH,OAAO,CAACC,OAAR,EAArB;AAAA,CAAzB,C,CAGP;;AACA,OAAO,MAAMqB,cAAc,GAAG;AAAA,MAAO;AAACnB,IAAAA,OAAD;AAAUc,IAAAA,UAAV;AAAsBM,IAAAA,MAAtB;AAA8BV,IAAAA;AAA9B,GAAP;AAAA,SAAsDb,OAAO,CAACC,OAAR,EAAtD;AAAA,CAAvB;AAEP,OAAO,MAAMuB,gBAAgB,GAAG;AAAA,MAAO;AAACP,IAAAA,UAAD;AAAad,IAAAA;AAAb,GAAP;AAAA,SAAiCH,OAAO,CAACC,OAAR,EAAjC;AAAA,CAAzB","sourcesContent":["\n// LOGIN\nexport const doLoginMock = async ({username, password}) => Promise.resolve()\n\nexport const fetchPrevLoginMock = async ({user_id}) => Promise.resolve()\n\n// REGISTER\nexport const doRegisterMock = async ({display_name, username, password}) => Promise.resolve()\n\n// USER\nexport const fetchUserMock = async ({user_id}) => Promise.resolve()\n\n// POSTS\nexport const fetchUserPostsMock = async ({user_id}) => Promise.resolve()\n\nexport const fetchRecentPostsMock = async () => Promise.resolve()\n\nexport const fetchPostMock = async ({post_id}) => Promise.resolve()\n\nexport const createPostMock = async ({owner_id, display_name, description, price}) => Promise.resolve()\n\n// CART\nexport const fetchCartMock = async ({user_id}) => Promise.resolve()\n\nexport const addToCartMock = async ({product_id, user_id}) => Promise.resolve()\n\nexport const removeFromCartMock = async ({item_id}) => Promise.resolve()\n\nexport const buyCartMock = async ({user_id}) => Promise.resolve()\n\n// HISTORY\n\nexport const fetchHistoryMock = async ({user_id}) => Promise.resolve()\n\n\n// REVIEWS\nexport const postReviewMock = async ({user_id, product_id, rating, description}) => Promise.resolve()\n\nexport const fetchReviewsMock = async ({product_id, user_id}) => Promise.resolve()"]},"metadata":{},"sourceType":"module"}