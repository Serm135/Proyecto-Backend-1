{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S\\\\Documents\\\\Proyecto-Backend-1\\\\frontend\\\\src\\\\pages\\\\Register\\\\Page.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./style.scss\";\nimport { useNavigate } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUser, setUser } from \"../../services/userSlice\";\nimport { SmartForm } from \"../../components/form\";\nimport { genNameFromPlaceHolder } from \"../../utils/tools\";\nimport { doRegister } from \"../../services/api\";\nimport { getUrl } from \"../../services/apiSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Page = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const API_URL = useSelector(getUrl);\n  const currentUser = useSelector(getUser);\n  React.useEffect(() => {\n    if (currentUser) {\n      navigate('/');\n    }\n  }, [currentUser]);\n\n  const onSubmit = async data => doRegister({\n    url: API_URL,\n    params: data\n  });\n\n  const onSuccess = data => {\n    dispatch(dispatch => setUser(dispatch, data));\n    navigate('/');\n  };\n\n  const formStructure = [{\n    type: 'text',\n    placeholder: 'Name'\n  }, {\n    type: 'text',\n    placeholder: 'Username'\n  }, {\n    type: 'password',\n    placeholder: 'Password',\n    equality: 1\n  }, {\n    type: 'password',\n    placeholder: 'Confirm Password',\n    equality: 1\n  }];\n  const formButtons = [{\n    type: \"rounded-primary\",\n    text: \"Register me\",\n    isSubmit: true\n  }, {\n    type: \"tertiary\",\n    text: \"I have an account\",\n    fn: () => navigate('/login')\n  }];\n  const formInitData = formStructure.reduce((acc, curr) => ({ ...acc,\n    [genNameFromPlaceHolder(curr)]: \"\"\n  }), {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page register\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'welcome-text xlarge-text text-700',\n      children: \"Welcome!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SmartForm, {\n      formInitData: formInitData,\n      formStructure: formStructure,\n      formButtons: formButtons,\n      onSubmit: onSubmit,\n      onSuccess: onSuccess,\n      workingText: \"Registering...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Page, \"7GPAWiYdF7I+dsHUl15AoWcttYQ=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector];\n});\n\n_c = Page;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["C:/Users/S/Documents/Proyecto-Backend-1/frontend/src/pages/Register/Page.js"],"names":["React","useNavigate","useDispatch","useSelector","getUser","setUser","SmartForm","genNameFromPlaceHolder","doRegister","getUrl","Page","navigate","dispatch","API_URL","currentUser","useEffect","onSubmit","data","url","params","onSuccess","formStructure","type","placeholder","equality","formButtons","text","isSubmit","fn","formInitData","reduce","acc","curr"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./style.scss\"\nimport {useNavigate} from \"react-router\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getUser, setUser} from \"../../services/userSlice\";\nimport {SmartForm} from \"../../components/form\";\nimport {genNameFromPlaceHolder} from \"../../utils/tools\";\nimport {doRegister} from \"../../services/api\";\nimport {getUrl} from \"../../services/apiSlice\";\n\nconst Page = () => {\n    const navigate = useNavigate();\n    const dispatch = useDispatch()\n    const API_URL = useSelector(getUrl)\n    const currentUser = useSelector(getUser)\n\n    React.useEffect(() => {\n        if (currentUser) {\n            navigate('/')\n        }\n    }, [currentUser])\n\n    const onSubmit = async (data) => doRegister({url: API_URL, params: data})\n    const onSuccess = (data) => {\n        dispatch(dispatch => setUser(dispatch, data))\n        navigate('/')\n    }\n\n    const formStructure = [\n        {\n            type: 'text',\n            placeholder: 'Name'\n        },\n        {\n            type: 'text',\n            placeholder: 'Username'\n        },\n        {\n            type: 'password',\n            placeholder: 'Password',\n            equality: 1\n        },\n        {\n            type: 'password',\n            placeholder: 'Confirm Password',\n            equality: 1\n        }\n    ]\n    const formButtons = [\n        {\n            type: \"rounded-primary\",\n            text: \"Register me\",\n            isSubmit: true\n        },\n        {\n            type: \"tertiary\",\n            text: \"I have an account\",\n            fn: () => navigate('/login')\n        },\n    ]\n    const formInitData = formStructure.reduce((acc, curr) => ({...acc, [genNameFromPlaceHolder(curr)]: \"\"}), {})\n\n    return <div className={\"page register\"}>\n        <div className={'welcome-text xlarge-text text-700'}>\n            Welcome!\n        </div>\n        <SmartForm\n            formInitData={formInitData}\n            formStructure={formStructure}\n            formButtons={formButtons}\n            onSubmit={onSubmit}\n            onSuccess={onSuccess}\n            workingText={\"Registering...\"}\n        />\n    </div>\n}\n\nexport default Page"]},"metadata":{},"sourceType":"module"}