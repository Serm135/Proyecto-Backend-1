{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S\\\\Documents\\\\Proyecto-Backend-1\\\\frontend\\\\src\\\\pages\\\\Cart\\\\Page.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./style.scss\";\nimport { useSelector } from \"react-redux\";\nimport { getUrl } from \"../../services/apiSlice\";\nimport { buyCart, fetchCart, fetchPost, removeFromCart } from \"../../services/api\";\nimport { Spinner } from \"../../components/spinners\";\nimport { RegularPrimaryButton, RegularSecondaryButton } from \"../../components/buttons\";\nimport { getUser } from \"../../services/userSlice\";\nimport { ProductCard } from \"../../components/product\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Page = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [cartData, setCartData] = React.useState(undefined);\n  const API_URL = useSelector(getUrl);\n  const userData = useSelector(getUser);\n\n  const fetch = async () => {\n    let cart = await fetchCart({\n      url: API_URL,\n      params: {\n        user_id: userData._id\n      }\n    });\n    const productData = await Promise.all(cart.map(item => fetchPost({\n      url: API_URL,\n      params: {\n        post_id: item.product_id\n      }\n    })));\n    cart = cart.map((item, i) => ({ ...item,\n      product_data: productData[i]\n    }));\n    setCartData(cart);\n  };\n\n  React.useEffect(() => {\n    if (userData) {\n      fetch();\n    } else {\n      navigate('/');\n    }\n  }, [API_URL]);\n\n  if (!cartData) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {\n      text: 'Loading cart...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this);\n  }\n\n  const handleRemove = async item_id => {\n    await removeFromCart({\n      url: API_URL,\n      params: {\n        item_id\n      }\n    });\n    await fetch();\n  };\n\n  const handleBuy = async () => {\n    await buyCart({\n      url: API_URL,\n      params: {\n        user_id: userData._id\n      }\n    });\n    await fetch();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page cart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), cartData.length > 0 && /*#__PURE__*/_jsxDEV(RegularPrimaryButton, {\n      onClick: () => handleBuy(),\n      children: `Buy cart`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), cartData.length > 0 ? cartData.map((item, key) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ProductCard, {\n        data: item.product_data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'cart__delete',\n        children: /*#__PURE__*/_jsxDEV(RegularSecondaryButton, {\n          onClick: () => handleRemove(item._id),\n          children: `Remove ${item.product_data.display_name} from cart`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'cart__no-items',\n      children: \" No items in cart. \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Page, \"TBh7czwa0AD6pGE+GoLViclqSQg=\", false, function () {\n  return [useNavigate, useSelector, useSelector];\n});\n\n_c = Page;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["C:/Users/S/Documents/Proyecto-Backend-1/frontend/src/pages/Cart/Page.js"],"names":["React","useSelector","getUrl","buyCart","fetchCart","fetchPost","removeFromCart","Spinner","RegularPrimaryButton","RegularSecondaryButton","getUser","ProductCard","useNavigate","Page","navigate","cartData","setCartData","useState","undefined","API_URL","userData","fetch","cart","url","params","user_id","_id","productData","Promise","all","map","item","post_id","product_id","i","product_data","useEffect","handleRemove","item_id","handleBuy","length","key","display_name"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./style.scss\"\nimport {useSelector} from \"react-redux\";\nimport {getUrl} from \"../../services/apiSlice\";\nimport {buyCart, fetchCart, fetchPost, removeFromCart} from \"../../services/api\";\nimport {Spinner} from \"../../components/spinners\";\nimport {RegularPrimaryButton, RegularSecondaryButton} from \"../../components/buttons\";\nimport {getUser} from \"../../services/userSlice\";\nimport {ProductCard} from \"../../components/product\";\nimport {useNavigate} from \"react-router\";\n\nconst Page = () => {\n    const navigate = useNavigate()\n    const [cartData, setCartData] = React.useState(undefined)\n    const API_URL = useSelector(getUrl)\n    const userData = useSelector(getUser);\n\n    const fetch = async () => {\n        let cart = await fetchCart({url: API_URL, params: {user_id: userData._id}})\n\n        const productData = await Promise.all(\n            cart.map(item => fetchPost({url: API_URL, params: {post_id: item.product_id}}))\n        )\n\n        cart = cart.map((item, i) => ({\n            ...item, product_data: productData[i]\n        }))\n\n        setCartData(cart)\n    }\n\n    React.useEffect(() => {\n        if (userData) {\n            fetch()\n        } else {\n            navigate('/')\n        }\n    }, [API_URL])\n\n    if (!cartData) {\n        return <Spinner text={'Loading cart...'}/>\n    }\n\n    const handleRemove = async (item_id) => {\n        await removeFromCart({url: API_URL, params: {item_id}})\n        await fetch()\n    }\n\n    const handleBuy = async () => {\n        await buyCart({url: API_URL, params: {user_id: userData._id}})\n        await fetch()\n    }\n\n    return <div className={\"page cart\"}>\n        <h2>\n            Cart\n        </h2>\n        {\n            cartData.length > 0 &&\n            <RegularPrimaryButton onClick={() => handleBuy()}>\n                {`Buy cart`}\n            </RegularPrimaryButton>\n        }\n        {\n            cartData.length > 0 ? cartData.map((item, key) =>\n                    <React.Fragment key={key}>\n                        <ProductCard\n                            data={item.product_data}\n                        />\n                        <div className={'cart__delete'}>\n                            <RegularSecondaryButton onClick={() => handleRemove(item._id)}>\n                                {`Remove ${item.product_data.display_name} from cart`}\n                            </RegularSecondaryButton>\n                        </div>\n                    </React.Fragment>\n                )\n                :\n                <div className={'cart__no-items'}> No items in cart. </div>\n        }\n    </div>\n}\n\nexport default Page"]},"metadata":{},"sourceType":"module"}