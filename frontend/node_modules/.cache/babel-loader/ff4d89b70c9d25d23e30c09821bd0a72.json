{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S\\\\Documents\\\\Proyecto-Backend-1\\\\frontend\\\\src\\\\components\\\\form\\\\Component.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Input } from \"../input\";\nimport { ErrorMessage } from \"../errormsg\";\nimport \"./style.scss\";\nimport { RoundedPrimaryButton, TertiaryButton } from \"../buttons\";\nimport { Spinner } from \"../spinners\";\nimport { genNameFromPlaceHolder } from \"../../utils/tools\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Component = _ref => {\n  _s();\n\n  let {\n    formInitData,\n    formStructure,\n    formButtons,\n    onSubmit,\n    onSuccess,\n    workingText\n  } = _ref;\n  const [formData, setFormData] = React.useState(formInitData);\n  const [errorMsg, setError] = React.useState(\"\");\n  const [isFetching, setFetching] = React.useState(false);\n\n  const handleChange = (newValue, name) => setFormData({ ...formData,\n    [name]: newValue\n  });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const equalityResult = formStructure.map(i => i.equality).filter((i, index, list) => i !== undefined && list.findIndex(s => s === i) === index).map(group => formStructure.filter(fsi => fsi.equality === group).map(fsi => genNameFromPlaceHolder(fsi)).map(fsi => formData[fsi]).map((fsi, i, list) => fsi === list[0])).flat().reduce((acc, curr) => acc && curr, true);\n\n    if (!equalityResult) {\n      setError(\"Inputted data does not match.\");\n      return;\n    }\n\n    try {\n      setFetching(true);\n      const response = await onSubmit(formData);\n      setFetching(false);\n      setFormData(formInitData);\n      onSuccess(response);\n    } catch (error) {\n      setFetching(false);\n      setError(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        \"--form-height\": `${(formStructure.length + 1) * 81 + formButtons.length * 50}px`\n      },\n      className: `smart-form__body ${!isFetching ? 'visible' : ''}`,\n      children: [formStructure.map((item, key) => /*#__PURE__*/_jsxDEV(Input, {\n        formData: formData,\n        name: genNameFromPlaceHolder(item),\n        onChange: handleChange,\n        type: item.type,\n        placeholder: item.placeholder\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), formButtons.map((item, key) => /*#__PURE__*/_createElement(ParseButton, { ...item,\n        handleSubmit: handleSubmit,\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 48\n        }\n      }))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `smart-form__fetching ${isFetching ? 'visible' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        text: workingText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Component, \"oKXyivixIOdATui4Bb1Z1WEbr4M=\");\n\n_c = Component;\n\nconst ParseButton = _ref2 => {\n  let {\n    type,\n    text,\n    isSubmit = false,\n    fn,\n    handleSubmit\n  } = _ref2;\n\n  switch (type) {\n    case 'rounded-primary':\n      return /*#__PURE__*/_jsxDEV(RoundedPrimaryButton, {\n        onClick: isSubmit ? handleSubmit : fn,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 20\n      }, this);\n\n    case 'tertiary':\n      return /*#__PURE__*/_jsxDEV(TertiaryButton, {\n        onClick: isSubmit ? handleSubmit : fn,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 20\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n};\n\n_c2 = ParseButton;\nexport default Component;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Component\");\n$RefreshReg$(_c2, \"ParseButton\");","map":{"version":3,"sources":["C:/Users/S/Documents/Proyecto-Backend-1/frontend/src/components/form/Component.js"],"names":["React","Input","ErrorMessage","RoundedPrimaryButton","TertiaryButton","Spinner","genNameFromPlaceHolder","Component","formInitData","formStructure","formButtons","onSubmit","onSuccess","workingText","formData","setFormData","useState","errorMsg","setError","isFetching","setFetching","handleChange","newValue","name","handleSubmit","e","preventDefault","equalityResult","map","i","equality","filter","index","list","undefined","findIndex","s","group","fsi","flat","reduce","acc","curr","response","error","message","length","item","key","type","placeholder","ParseButton","text","isSubmit","fn"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Input} from \"../input\";\nimport {ErrorMessage} from \"../errormsg\";\nimport \"./style.scss\"\nimport {RoundedPrimaryButton, TertiaryButton} from \"../buttons\";\nimport {Spinner} from \"../spinners\";\nimport {genNameFromPlaceHolder} from \"../../utils/tools\";\n\nconst Component = ({formInitData, formStructure, formButtons, onSubmit, onSuccess, workingText}) => {\n    const [formData, setFormData] = React.useState(formInitData)\n    const [errorMsg, setError] = React.useState(\"\")\n    const [isFetching, setFetching] = React.useState(false)\n\n    const handleChange = (newValue, name) => setFormData({...formData, [name]: newValue})\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n\n        const equalityResult = formStructure\n            .map(i => i.equality)\n            .filter((i, index, list) => (i !== undefined) && list.findIndex(s => s === i) === index)\n            .map(group =>\n                formStructure\n                    .filter(fsi => fsi.equality === group)\n                    .map(fsi => genNameFromPlaceHolder(fsi))\n                    .map(fsi => formData[fsi])\n                    .map((fsi, i, list) => fsi === list[0])\n            )\n            .flat()\n            .reduce((acc, curr) => acc && curr, true)\n\n        if (!equalityResult) {\n            setError(\"Inputted data does not match.\")\n            return;\n        }\n\n        try {\n            setFetching(true)\n            const response = await onSubmit(formData)\n            setFetching(false)\n            setFormData(formInitData)\n            onSuccess(response)\n        } catch(error) {\n            setFetching(false)\n            setError(error.message)\n        }\n    }\n\n    return <>\n        <form\n            style={{\n                \"--form-height\": `${ ((formStructure.length + 1) * 81) + (formButtons.length * 50) }px`\n            }}\n            className={`smart-form__body ${!isFetching? 'visible' : ''}`}\n        >\n            {\n                formStructure.map((item, key) =>\n                    <Input\n                        formData={formData}\n                        name={genNameFromPlaceHolder(item)}\n                        onChange={handleChange}\n                        type={item.type}\n                        placeholder={item.placeholder}\n                        key={key}\n                    />\n                )\n            }\n            <ErrorMessage>\n                {errorMsg}\n            </ErrorMessage>\n            {\n                formButtons.map((item, key) => <ParseButton {...item} handleSubmit={handleSubmit} key={key} />)\n            }\n        </form>\n        <div className={`smart-form__fetching ${isFetching ? 'visible' : ''}`}>\n            <Spinner\n                text={workingText}\n            />\n        </div>\n    </>\n}\n\nconst ParseButton = ({type, text, isSubmit=false, fn, handleSubmit}) => {\n    switch(type) {\n        case 'rounded-primary':\n            return <RoundedPrimaryButton\n                onClick={isSubmit? handleSubmit : fn}\n            >\n                {text}\n            </RoundedPrimaryButton>\n        case 'tertiary':\n            return <TertiaryButton\n                onClick={isSubmit? handleSubmit : fn}\n            >\n                {text}\n            </TertiaryButton>\n        default:\n            return <></>\n    }\n}\n\nexport default Component"]},"metadata":{},"sourceType":"module"}