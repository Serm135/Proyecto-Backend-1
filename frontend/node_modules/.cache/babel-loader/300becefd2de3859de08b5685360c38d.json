{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S\\\\Documents\\\\Proyecto-Backend-1\\\\frontend\\\\src\\\\pages\\\\Dashboard\\\\AuthPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport \"./style.scss\";\nimport { fetchRecentPosts } from \"../../services/api\";\nimport { useSelector } from \"react-redux\";\nimport { getUrl } from \"../../services/apiSlice\";\nimport { ProductCard } from \"../../components/product\";\nimport { Spinner } from \"../../components/spinners\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Page = () => {\n  _s();\n\n  const [recentPosts, setRecents] = React.useState(undefined);\n  const API_URL = useSelector(getUrl);\n  React.useEffect(() => {\n    const fetch = async () => {\n      const posts = await fetchRecentPosts({\n        url: API_URL\n      });\n      setRecents(posts);\n    };\n\n    fetch();\n  }, [API_URL]);\n\n  if (!recentPosts) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {\n      text: 'Loading recent posts...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page auth-dashboard\",\n    children: recentPosts.length > 0 ? recentPosts.map((item, key) => /*#__PURE__*/_jsxDEV(ProductCard, {\n      data: item\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'auth-dashboard__no-items',\n      children: \" No recent items. \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Page, \"VOYmCJXp+rwluX6lj/wann/vs0Y=\", false, function () {\n  return [useSelector];\n});\n\n_c = Page;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["C:/Users/S/Documents/Proyecto-Backend-1/frontend/src/pages/Dashboard/AuthPage.js"],"names":["React","fetchRecentPosts","useSelector","getUrl","ProductCard","Spinner","Page","recentPosts","setRecents","useState","undefined","API_URL","useEffect","fetch","posts","url","length","map","item","key"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,SAAQC,gBAAR,QAA+B,oBAA/B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,MAAR,QAAqB,yBAArB;AACA,SAAQC,WAAR,QAA0B,0BAA1B;AACA,SAAQC,OAAR,QAAsB,2BAAtB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,WAAD,EAAcC,UAAd,IAA4BR,KAAK,CAACS,QAAN,CAAeC,SAAf,CAAlC;AACA,QAAMC,OAAO,GAAGT,WAAW,CAACC,MAAD,CAA3B;AAEAH,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AAClB,UAAMC,KAAK,GAAG,YAAY;AACtB,YAAMC,KAAK,GAAG,MAAMb,gBAAgB,CAAC;AAACc,QAAAA,GAAG,EAAEJ;AAAN,OAAD,CAApC;AACAH,MAAAA,UAAU,CAACM,KAAD,CAAV;AACH,KAHD;;AAIAD,IAAAA,KAAK;AACR,GAND,EAMG,CAACF,OAAD,CANH;;AAQA,MAAI,CAACJ,WAAL,EAAkB;AACd,wBAAO,QAAC,OAAD;AAAS,MAAA,IAAI,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,cAEQA,WAAW,CAACS,MAAZ,GAAqB,CAArB,GAAyBT,WAAW,CAACU,GAAZ,CAAgB,CAACC,IAAD,EAAOC,GAAP,kBACjC,QAAC,WAAD;AAEI,MAAA,IAAI,EAAED;AAFV,OACSC,GADT;AAAA;AAAA;AAAA;AAAA,YADiB,CAAzB,gBAOI;AAAK,MAAA,SAAS,EAAE,0BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA9BD;;GAAMb,I;UAEcJ,W;;;KAFdI,I;AAgCN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport \"./style.scss\"\nimport {fetchRecentPosts} from \"../../services/api\";\nimport {useSelector} from \"react-redux\";\nimport {getUrl} from \"../../services/apiSlice\";\nimport {ProductCard} from \"../../components/product\";\nimport {Spinner} from \"../../components/spinners\";\n\nconst Page = () => {\n    const [recentPosts, setRecents] = React.useState(undefined)\n    const API_URL = useSelector(getUrl)\n\n    React.useEffect(() => {\n        const fetch = async () => {\n            const posts = await fetchRecentPosts({url: API_URL})\n            setRecents(posts)\n        }\n        fetch()\n    }, [API_URL])\n\n    if (!recentPosts) {\n        return <Spinner text={'Loading recent posts...'}/>\n    }\n\n    return (\n        <div className=\"page auth-dashboard\">\n            {\n                recentPosts.length > 0 ? recentPosts.map((item, key) =>\n                        <ProductCard\n                            key={key}\n                            data={item}\n                        />\n                    )\n                    :\n                    <div className={'auth-dashboard__no-items'}> No recent items. </div>\n            }\n        </div>\n    );\n}\n\nexport default Page"]},"metadata":{},"sourceType":"module"}